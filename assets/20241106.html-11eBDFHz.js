import{_ as n,c as a,b as p,o as e}from"./app-D0wlB8dq.js";const t={};function l(o,s){return e(),a("div",null,s[0]||(s[0]=[p(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> *  获取父页面</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">deep</span>  1=当前 2=父页 3=父父页</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getPrevPage</span><span class="token punctuation">(</span><span class="token parameter">deep <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> pages <span class="token operator">=</span> <span class="token function">getCurrentPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">let</span> prevPage <span class="token operator">=</span> pages<span class="token punctuation">[</span>pages<span class="token punctuation">.</span>length <span class="token operator">-</span> deep<span class="token punctuation">]</span> <span class="token comment">//上一个页面</span></span>
<span class="line">  <span class="token keyword">return</span> prevPage</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 修改当前/父页面的某个列表节点</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">id</span> 主键</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">valName</span> 被修改的字段名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">val</span>  被修改的值</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">list</span>   数据集</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">idName</span> 主键名</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">modifyListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> list<span class="token punctuation">,</span> valName<span class="token punctuation">,</span> val<span class="token punctuation">,</span> idName <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>list <span class="token operator">||</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">  <span class="token keyword">let</span> pos <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">[</span>idName<span class="token punctuation">]</span> <span class="token operator">===</span> id<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    list<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">[</span>valName<span class="token punctuation">]</span> <span class="token operator">=</span> val</span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 修改当前/父页面的某个列表节点(单个值)</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">id</span> 主键</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">valName</span> 被修改的字段名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">val</span>  被修改的值</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">deep</span>  1=当前 2=父页 3=父父页</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">listName</span>   数据集名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">idName</span> 主键名</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">modifyPrevPageListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> valName<span class="token punctuation">,</span> val<span class="token punctuation">,</span> deep <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> listName <span class="token operator">=</span> <span class="token string">&#39;dataList&#39;</span><span class="token punctuation">,</span> idName <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> prevPage <span class="token operator">=</span> <span class="token function">getPrevPage</span><span class="token punctuation">(</span>deep<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prevPage<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> dataList <span class="token operator">=</span> prevPage<span class="token punctuation">.</span>data<span class="token punctuation">[</span>listName<span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataList<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> list <span class="token operator">=</span> dataList<span class="token punctuation">[</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">modifyListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> list<span class="token punctuation">,</span> valName<span class="token punctuation">,</span> val<span class="token punctuation">,</span> idName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    prevPage<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token punctuation">[</span>listName <span class="token operator">+</span> <span class="token string">&#39;.list&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> list<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 修改当前/父页面的某个列表节点(一组值)</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">id</span> 主键</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">valName</span> 被修改的字段名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">val</span>  被修改的值</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">deep</span>  1=当前 2=父页 3=父父页</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">listName</span>   数据集名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">idName</span> 主键名</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">modifyPrevPageListNodeObject</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> vals<span class="token punctuation">,</span> deep <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> listName <span class="token operator">=</span> <span class="token string">&#39;dataList&#39;</span><span class="token punctuation">,</span> idName <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> prevPage <span class="token operator">=</span> <span class="token function">getPrevPage</span><span class="token punctuation">(</span>deep<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prevPage<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> dataList <span class="token operator">=</span> prevPage<span class="token punctuation">.</span>data<span class="token punctuation">[</span>listName<span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataList<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> list <span class="token operator">=</span> dataList<span class="token punctuation">[</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> vals<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">modifyListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> list<span class="token punctuation">,</span> key<span class="token punctuation">,</span> vals<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> idName<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  prevPage<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">[</span>listName <span class="token operator">+</span> <span class="token string">&#39;.list&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> list<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 从记录数组里删除某个节点</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">id</span></span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">list</span></span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">idName</span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">delListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> list<span class="token punctuation">,</span> idName <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>list <span class="token operator">||</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">  <span class="token keyword">let</span> pos <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">[</span>idName<span class="token punctuation">]</span> <span class="token operator">===</span> id<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 删除当前/父页面的某个列表节点</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">id</span> 主键</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">deep</span> 1=当前 2=父页 3=父父页</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">listName</span>  数据集名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">idName</span>  主键名</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">delPrevPageListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> deep <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> listName <span class="token operator">=</span> <span class="token string">&#39;dataList&#39;</span><span class="token punctuation">,</span> idName <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> prevPage <span class="token operator">=</span> <span class="token function">getPrevPage</span><span class="token punctuation">(</span>deep<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">let</span> dataList <span class="token operator">=</span> prevPage<span class="token punctuation">.</span>data<span class="token punctuation">[</span>listName<span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataList<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> list <span class="token operator">=</span> dataList<span class="token punctuation">[</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">let</span> total <span class="token operator">=</span> dataList<span class="token punctuation">[</span><span class="token string">&#39;total&#39;</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">delListNode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> list<span class="token punctuation">,</span> idName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    prevPage<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token punctuation">[</span>listName <span class="token operator">+</span> <span class="token string">&#39;.list&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> list<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">[</span>listName <span class="token operator">+</span> <span class="token string">&#39;.total&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> total<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 刷新当前/父页面的某个列表节点</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">deep</span>  1=当前 2=父页 3=父父页</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">listName</span>  数据集名</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">listFunc</span>  翻页函数名</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">refreshPrevListNode</span><span class="token punctuation">(</span>deep <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> listName <span class="token operator">=</span> <span class="token string">&#39;dataList&#39;</span><span class="token punctuation">,</span> listFunc <span class="token operator">=</span> <span class="token string">&#39;getList&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> prevPage <span class="token operator">=</span> <span class="token function">getPrevPage</span><span class="token punctuation">(</span>deep<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">let</span> dataList <span class="token operator">=</span> prevPage<span class="token punctuation">.</span>data<span class="token punctuation">[</span>listName<span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataList<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">  <span class="token keyword">await</span> prevPage<span class="token punctuation">[</span>listFunc<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)]))}const i=n(t,[["render",l],["__file","20241106.html.vue"]]),u=JSON.parse('{"path":"/blogs/Frontend/20241106.html","title":"微信小程序实用的页面数据处理工具函数","lang":"en-US","frontmatter":{"title":"微信小程序实用的页面数据处理工具函数","date":"2024-11-06T00:00:00.000Z","tags":["微信小程序"],"categories":["Frontend"]},"headers":[],"git":{"createdTime":1734342184000,"updatedTime":1734342184000,"contributors":[{"name":"wanggang","email":"wanggang@shouyinongye.com","commits":1}]},"filePathRelative":"blogs/Frontend/20241106.md"}');export{i as comp,u as data};
